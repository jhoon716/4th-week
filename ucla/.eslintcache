[{"/home/ubuntu/week4/4th-week/ucla-front/src/index.js":"1","/home/ubuntu/week4/4th-week/ucla-front/src/component/MembersDetail.js":"2","/home/ubuntu/week4/4th-week/ucla-front/src/component/Loader.js":"3","/home/ubuntu/week4/4th-week/ucla-front/src/App.js":"4","/home/ubuntu/week4/4th-week/ucla-front/src/user.js":"5","/home/ubuntu/week4/4th-week/ucla-front/src/component/Home.js":"6","/home/ubuntu/week4/4th-week/ucla-front/src/component/Members.js":"7"},{"size":520,"mtime":1611467456729,"results":"8","hashOfConfig":"9"},{"size":2222,"mtime":1611572745028,"results":"10","hashOfConfig":"9"},{"size":544,"mtime":1611572745028,"results":"11","hashOfConfig":"9"},{"size":2206,"mtime":1611572745028,"results":"12","hashOfConfig":"9"},{"size":305,"mtime":1611572745028,"results":"13","hashOfConfig":"9"},{"size":714,"mtime":1611467456729,"results":"14","hashOfConfig":"9"},{"size":2174,"mtime":1611573417047,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1s9mxqe",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"/home/ubuntu/week4/4th-week/ucla-front/src/index.js",[],["35","36"],"/home/ubuntu/week4/4th-week/ucla-front/src/component/MembersDetail.js",[],"/home/ubuntu/week4/4th-week/ucla-front/src/component/Loader.js",["37"],"import React from 'react'; \nimport ReactLoading from 'react-loading';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Spinner} from 'react-bootstrap';\n\n\nfunction Loader({ type, color, message }) { \n    return (\n        <div class=\"contentWrap\">\n            <div style={{ position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\" }}>\n                <Spinner animation=\"border\"/> \n                <p style={{marginTop: \"'20dp'\"}}>{message}</p>\n            </div> \n        </div>\n    ); \n} \n    \nexport default Loader;","/home/ubuntu/week4/4th-week/ucla-front/src/App.js",[],"/home/ubuntu/week4/4th-week/ucla-front/src/user.js",["38"],"export default [\n    {\n      id : 0,\n      name : \"이정훈\",\n      status : \"정훈이랑 놀아줘염 뿌우\",\n    },\n  \n    {\n      id : 1,\n      name : \"이우현\",\n      status : \"Born in Seoul\",\n    },\n  \n    {\n      id : 2,\n      name : \"정찬이\",\n      status : \"Born in the States\",\n    }\n  ] ","/home/ubuntu/week4/4th-week/ucla-front/src/component/Home.js",["39"],"import React, {useState} from 'react';\nimport {Button, Jumbotron} from 'react-bootstrap';\nimport {useHistory} from 'react-router-dom';\n\nfunction Home() {\n    let history = useHistory();\n    return (\n        <Jumbotron\n        className=\"background-sakura\">\n        <h1>우연히, 봄</h1>\n        <p>\n            지금 옆에 있는 팀메이트가 당신의 봄일수도 있습니다. <br />\n            우연찮이 서비스가 도와드릴게요.\n        </p>\n        <p>\n            {/* 뒤로가고 싶으면 history.goback() */}\n            <Button variant=\"primary\" onClick = {()=>{history.push('/members')}}>쪽지 보내러 가기</Button>\n        </p>\n        </Jumbotron>\n    )\n}\n\nexport default Home;","/home/ubuntu/week4/4th-week/ucla-front/src/component/Members.js",["40","41"],"import React, {useState, useEffect} from 'react';\nimport {Jumbotron} from 'react-bootstrap';\nimport Loader from './Loader.js'\nimport axios from 'axios';\n\nfunction Members(props) {\n    let [loader, setLoader] = useState(true);\n    let [members, setMembers] = useState(null);\n    let start = true\n\n    useEffect (()=>{\n        start = false\n        axios.get('http://localhost:3001/api/users')\n        .then((result) => { \n            console.log(result.data);\n            setLoader(false);\n            setMembers([...members, ...result.data]);\n        })\n        .catch(()=>{\n            setLoader(false);\n            console.log(\"실패!!!!!!!!!!\");\n        })        \n    },[start]); // [] 내부 state가 변경이 될때만 실행\n\n    return (\n        <div>\n            {\n                loader ? <Loader type=\"spin\" color=\"black\" message=\"그룹 멤버들을 불러오는 중입니다\" ></Loader> : \n                (\n                    members !== null\n                    ?\n                    <div>\n                        <Jumbotron\n                            className=\"background-sakura\">\n                            <h1>그룹명 : MADCAMP</h1>\n                            <p>\n                                기간 : 2020/12/29~ 2021/01/26\n                             </p>\n                        </Jumbotron>\n    \n                        <div className=\"container\">\n    \n                            <div className=\"row\">\n                                {\n                                    props.members.map((member, index) => {\n                                        return <Card member={members[index]} />\n                                    })\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    null\n                )\n            }\n        </div>        \n    )\n}\n\nfunction Card(props) {\n    return (\n      <div className=\"col-md-4\">\n        <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\n        <h4>{props.member.name}</h4>\n        <p>{props.member.status}</p>\n      </div>\n    )\n}\n\nexport default Members;",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":20},{"ruleId":"50","severity":1,"message":"51","line":1,"column":1,"nodeType":"52","endLine":19,"endColumn":4},{"ruleId":"46","severity":1,"message":"53","line":1,"column":16,"nodeType":"48","messageId":"49","endLine":1,"endColumn":24},{"ruleId":"54","severity":1,"message":"55","line":12,"column":17,"nodeType":"56","endLine":12,"endColumn":22},{"ruleId":"57","severity":1,"message":"58","line":63,"column":9,"nodeType":"59","endLine":63,"endColumn":82},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'ReactLoading' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'start' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]